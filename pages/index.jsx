import Head from "next/head";
import { useState } from "react";
import { useQuery, gql } from "@apollo/client";
import { Grid, GridItem, Heading, Text } from "@chakra-ui/react";

import ConfessionCard from "../components/ConfessionCard";
import ConfessionCardSkeleton from "../components/skeleton/ConfessionCardSkeleton";
import Filter from "../components/Filter";

const GET_CERTIFICATIONS = gql`
  query certifications(
    $first: Int
    $skip: Int
    $orderBy: String
    $orderDirection: String
    $where: Certification_filter
  ) {
    certifications(
      first: $first
      skip: $skip
      orderBy: $orderBy
      orderDirection: $orderDirection
      where: $where
    ) {
      id
      hash
      message
      category
      author
      holder
      timestamp
    }
  }
`;

export default function Home() {
  const [activeTag, setActiveTag] = useState("All");
  const { loading, error, data } = useQuery(GET_CERTIFICATIONS, {
    variables: {
      first: 10,
      skip: 0,
      orderBy: "timestamp",
      orderDirection: "desc",
      ...(activeTag !== "All" && {
        where: { category: activeTag.toLocaleLowerCase() },
      }),
    },
  });

  if (error) return "Something went wrong. please try again.! " + error.message;

  console.log(data);
  return (
    <div>
      <Head>
        <title>Certificate Dapp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Heading
          size={"lg"}
          lineHeight="tall"
          textAlign={"center"}
          maxWidth="xl"
          mx="auto"
        >
          Certifying a certificate,
          <Text
            bgGradient={"linear(to-r, purple.600,pink.300,blue.600,teal.300)"}
            bgClip="text"
          >
            {" "}
            prove it forever.
          </Text>
        </Heading>
        <Filter activeTag={activeTag} setActiveTag={setActiveTag} />
        <Grid
          mt="10"
          templateColumns={{
            base: "repeat(1, 1fr)",
            md: "repeat(2, 1fr)",
          }}
          gap={6}
          justifyContent={"center"}
        >
          {loading
            ? new Array(6).fill(0).map((_, index) => (
                <GridItem key={index}>
                  <ConfessionCardSkeleton />
                </GridItem>
              ))
            : data?.certifications?.map((confession, index) => (
                <GridItem colSpan={1} key={confession.id}>
                  <ConfessionCard confession={confession} index={index} />
                </GridItem>
              ))}
        </Grid>
      </main>
    </div>
  );
}
